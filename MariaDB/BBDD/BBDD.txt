PARA ACCEDER DESDE LA CONSOLA A LA BBDD USAR EL COMANDO

./Applications/XAMPP/xamppfiles/bin/mariadb
./Applications/XAMPP/xamppfiles/bin/mysql

BBDD
Una base de datos es un conjunto de datos perteneciente a un mismo contexto
y almacenados sistemáticamente para su posterior uso.

SGBD - Sistema gestor de base de datos, permiten almacenar y posteriormente
acceder y gestionar los datos almacenados en la BBDD.

Elementos de BBDD:
    TABLAS:
        COLUMNAS o CAMPOS
        FILAS o REGISTROS
        
Para acceder desde la terminal a MySQL usar el comando
    mysql -u root -p
veremos que entra en MariaDB porque XAMPP ha cambiado MySQL por MariaDB pero todos los comandos y herramientas 
funcionan igual.
COMANDOS:
    STATUS nos da información sobre la version y todo lo relacionado con MariaDB
    SHOW DATABASES; muestra las bases de datos.
    CREATE DATABASE blog_master; Crea una base de datos con nombre "blog_master"
    DROP DATABASE blog_master; Borra la base de datos de nombre "blog_master"
    USE blog_master; Activa la base de datos "blog_master" para su uso.
    SHOW TABLES; muestra las tablas de la BBDD activa
    SELECT database(); sirve para saber que BBDD estamos usando.
    CREATE TABLE usuarios; Creamos tabla usuarios.
    DESCRIBE usuarios; muestra la descripción de la tabla usuarios. También funciona (DESC usuarios;)
    DROP TABLE usuarios; Borra la tabla usuarios.

RESTRICCIONES DE INTEGRIDAD
    NOT NULL - no permite dejar un campo vacío.
    NULL - permite dejar el campo vacío.
    DEFAULT 'xxxx' - introduce un dato por defecto en un campo.
    AUTO_INCREMENT - Hace un autoincremento en el campo, solo sirve para Primary keys.
    CONSTRAINT pk_usuarios PRIMARY KEY(id) - Sirve para crear una clave primaria sobre el campo id

MODIFICAR TABLAS -> ALTER TABLE xxxxxx
    RENOMBRAR una tabla usamos el atributo RENAME TO.
    CAMBIAR EL NOMBREa un campo usamos el atributo CHANGE.
    MODIFICAR UN CAMPO usamos el atributo MODIFY.
    AÑADIR UN CAMPO usamos el atributo ADD.
    AÑADIR UNA RESTRICTION A UN CAMPO usamos el atributo ADD CONSTRAINT.
    BORRAR UN CAMPO usamos el atributo DROP seguido de la columna.

DISEÑO DE BASE DE DATOS - PROGRAMA DIA software libre (buscar en google "dia program")

    En mi caso lo hago con UML-LET que tengo instalado en Visual Studio Code es igual.

PRIMARY KEY y FOREIGN KEY

    PRIMARY KEY
    Las claves primarias es el campo o la combinación de campos que identifica 
    de forma úinca cada registro o fila de una tabla. (Puede ser una columna o combinación de columnas).
    No puede haber dos filas con la misma clave primaria.
    Se crean:       
        CONSTRAINT PK_usuarios PRIMARY KEY(id)

    FOREIGN KEY
    Es una limitación referencial entre dos tablas, la FOREIGN KEY identifica una columna o gruop de 
    columnas (en tabla hija) y se refiere a otra columna o grupo de columnas (en tabla padre) las cuales
    deben ser claves primarias en la tabla padre.
    Se crean:
        CONSTRAINT FK_entradas_categorias FOREIGN KEY(categoria_id) REFERENCES categorias(id),
        
    Pueden tener otra restricción adicional como son:
        ON UPDATE CASCADE: se usa para actualizar en cascada, quiere decir que si un registro de la tabla
        padre se actualiza, también se actualizará en la tabla hija.
        ON DELETE CASCADE: se usa para borrar en cascada, quiere decir que si un registro de la tabla
        padre se borra, también se borarará en la tabla hija.
            Se puede añadir una acción desués del ON DELETE:
                SET NULL: al borrar el registro se pondrá a NULL
                SET DEFAULT: al borrar el registro se pondrá en a un valor por defecto
                NO ACTION: No hace ninguna acción (es lo que hace si no se le indica nada)

Lenguaje de manipulación de datos - DML (Data Manipulation Language)
    El lenguaje DML sirve para ejecutar tareas de consulta y modificación de los datos contenidos en la BBDD
    Las operaciones que podemos realizar son:
        SELECT: extraer información en forma de consulta de nuestra BBDD.
            SELECT * FROM usuarios;
        INSERT: insertar datos a nuestra BBDD.
            INSERT INTO usuarios VALUES(null,'Rosa','Pérez','rpl@gmail','1243','2024-04-01');
            INSERT INTO usuarios(email,password) VALUES('jpp@gmail.com', '1234');
        DELETE: borrar datos de nuestra BBDD.
        UPDATE: actualizar los datos de los registros de nuestra BBDD. 

Operadores 
    IGUAL           =
    DISTINTO        !=
    MENOR QUE       <
    MAYOR QUE       >
    MENOR O IGUAL   <=
    MAYOR O IGUAL   >=
    ENTRE           between A and B
    EN              IN
    ES NULO         ISNULL
    NO NULO         IS NOT NULL
    COMO            LIKE
    NO ES COMO      NOT LIKE

Operadores lógicos
    O       OR
    Y       AND
    NO      NOT

Comodines
    El tanto por ciento busca cualquier cantidad de caracteres: %
    Dos guiones bajos busca un caracter desconocido: __


ORDER BY
    Sirve para ordenar una consulta por un campo en concreto y se puede orenar en:
    ASC - ascendente
    DESC - descendente

LIMIT
    Sirve para limitar los registros a el número que le indiquemos.
    Si le indicamos dos números te muestra los registros entre los números seleccionados

UPDATE:
    Sirve para actualizar REGISTROS de una tabla. s muy importante usar una condicion where porque
    si usamos solo DELETE FROM borramos todos los registros.

DELETE:
Sirve para eliminar REGISTROS de una tabla. Es muy importante usar una condicion where porque
si usamos solo DELETE FROM borramos todos los registros.

AGRUPAMIENTO:
    COUNT: cuenta las filas de una consulta
    AVG: saca la media
    MAX: devuelve el valor máximo del grupo
    MIN: devuelve el valor mínimo del grupo
    SUM: suma todo el contenido del grupo

SUBCONSULTAS
    Sirve para ejecutar consultas dentro de otras consultas, lo que hace es obtener una serie de
    datos con la primera consulta y sobre esos datos aplicar otra consulta para realizar un
    segundo filtro para obtener un resulado más afinado.
